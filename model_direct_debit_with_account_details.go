/*
finAPI Web Form 2.0

The following pages give you some general information on how to use our APIs.<br/>The actual API services documentation then follows further below. You can use the menu to jump between API sections.<br/><br/>This page has a built-in HTTP(S) client, so you can test the services directly from within this page, by filling in the request parameters and/or body in the respective services, and then hitting the TRY button. Note that you need to be authorized to make a successful API call. To authorize, refer to the '<a target='_blank' href='https://docs.finapi.io/?product=access#tag--Authorization'>Authorization</a>' section of Access, or in case you already have a valid user token, just use the QUICK AUTH on the left.<br/>Please also remember that all user management functions should be looked up in <a target='_blank' href='https://docs.finapi.io/?product=access'>Access</a>.<br/><br/>You should also check out the <a target='_blank' href='https://documentation.finapi.io/webform/'>Web Form 2.0 Public Documentation</a> as well as <a target='_blank' href='https://documentation.finapi.io/access/'>Access Public Documentation</a> for more information. If you need any help with the API, contact <a href='mailto:support@finapi.io'>support@finapi.io</a>.<br/><h2 id=\"general-information\">General information</h2><h3 id=\"general-request-ids\"><strong>Request IDs</strong></h3>With any API call, you can pass a request ID via a header with name \"X-Request-Id\". The request ID can be an arbitrary string with up to 255 characters. Passing a longer string will result in an error.<br/><br/>If you don't pass a request ID for a call, finAPI will generate a random ID internally.<br/><br/>The request ID is always returned back in the response of a service, as a header with name \"X-Request-Id\".<br/><br/>We highly recommend to always pass a (preferably unique) request ID, and include it into your client application logs whenever you make a request or receive a response(especially in the case of an error response). finAPI is also logging request IDs on its end. Having a request ID can help the finAPI support team to work more efficiently and solve tickets faster.<h3 id=\"type-coercion\"><strong>Type Coercion</strong></h3>In order to ease the integration for some languages, which do not natively support high precision number representations, Web Form 2.0 API supports relax type binding for the openAPI type <code>number</code>, which is used for money amount fields. If you use one of those languages, to avoid precision errors that can appear from <code>float</code> values, you can pass the amount as a <code>string</code>.<h3 id=\"general-faq\"><strong>FAQ</strong></h3><strong>Is there a finAPI SDK?</strong><br/>Currently we do not offer a native SDK, but there is the option to generate an SDKfor almost any target language via OpenAPI. Use the 'Download SDK' button on this page for SDK generation.<br/><br/><strong>Why do I need to keep authorizing when calling services on this page?</strong><br/>This page is a \"one-page-app\". Reloading the page resets the OAuth authorization context. There is generally no need to reload the page, so just don't do it and your authorization will persist.

API version: 2.430.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package webform2

import (
	"encoding/json"
)

// DirectDebitWithAccountDetails Parameters for a direct debit with an account
type DirectDebitWithAccountDetails struct {
	// Execution date for the direct debit(s), in the format <code>YYYY-MM-DD</code>. May not be in the past.
	ExecutionDate string `json:"executionDate"`
	// This field is only relevant when you pass multiple orders. It determines whether the orders should be processed by the bank as one collective booking (in case of <code>true</code>), or as separate bookings (in case of <code>false</code>). Note that it is subject to the bank whether it will regard the field.
	BatchBookingPreferred NullableBool `json:"batchBookingPreferred,omitempty"`
	// The profile to be applied to the web form.<br/>This will overwrite the default profile, if such a profile exists.
	ProfileId NullableString `json:"profileId,omitempty"`
	// The URL where the end-user will be redirected to after completing the bank login and (possibly) the SCA on the bank's website. Must always be provided by mandators with <code>FULLY_LICENSED</code> or <code>PISP</code> license type, and may not be provided by mandators with other license types. Find more info in the <a target='_blank' href='https://documentation.finapi.io/webform/Licensed-customers-using-the-Web-Form.2832302195.html'>Web Form 2.0 Public Documentation</a>.
	RedirectUrl NullableString `json:"redirectUrl,omitempty"`
	Callbacks NullableCallbacks `json:"callbacks,omitempty"`
	// Direct debit orders
	Orders []DirectDebitOrder `json:"orders"`
	Receiver DirectDebitWithAccountReceiver `json:"receiver"`
	// Type of the direct debit; either <code>BASIC</code> or <code>B2B</code> (Business-To-Business).
	DirectDebitType string `json:"directDebitType"`
	// Sequence type of the direct debit. Possible values:<br/>&bull; <code>OOFF</code> - means that this is a one-time direct debit order;<br/>&bull; <code>FRST</code> - means that this is the first in a row of multiple direct debit orders;<br/>&bull; <code>RCUR</code> - means that this is one (but not the first or final) within a row of multiple direct debit orders;<br/>&bull; <code>FNAL</code> - means that this is the final in a row of multiple direct debit orders.
	SequenceType string `json:"sequenceType"`
}

// NewDirectDebitWithAccountDetails instantiates a new DirectDebitWithAccountDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectDebitWithAccountDetails(executionDate string, orders []DirectDebitOrder, receiver DirectDebitWithAccountReceiver, directDebitType string, sequenceType string) *DirectDebitWithAccountDetails {
	this := DirectDebitWithAccountDetails{}
	this.ExecutionDate = executionDate
	var batchBookingPreferred bool = true
	this.BatchBookingPreferred = *NewNullableBool(&batchBookingPreferred)
	this.Orders = orders
	this.Receiver = receiver
	this.DirectDebitType = directDebitType
	this.SequenceType = sequenceType
	return &this
}

// NewDirectDebitWithAccountDetailsWithDefaults instantiates a new DirectDebitWithAccountDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectDebitWithAccountDetailsWithDefaults() *DirectDebitWithAccountDetails {
	this := DirectDebitWithAccountDetails{}
	var batchBookingPreferred bool = true
	this.BatchBookingPreferred = *NewNullableBool(&batchBookingPreferred)
	return &this
}

// GetExecutionDate returns the ExecutionDate field value
func (o *DirectDebitWithAccountDetails) GetExecutionDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExecutionDate
}

// GetExecutionDateOk returns a tuple with the ExecutionDate field value
// and a boolean to check if the value has been set.
func (o *DirectDebitWithAccountDetails) GetExecutionDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExecutionDate, true
}

// SetExecutionDate sets field value
func (o *DirectDebitWithAccountDetails) SetExecutionDate(v string) {
	o.ExecutionDate = v
}

// GetBatchBookingPreferred returns the BatchBookingPreferred field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DirectDebitWithAccountDetails) GetBatchBookingPreferred() bool {
	if o == nil || o.BatchBookingPreferred.Get() == nil {
		var ret bool
		return ret
	}
	return *o.BatchBookingPreferred.Get()
}

// GetBatchBookingPreferredOk returns a tuple with the BatchBookingPreferred field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DirectDebitWithAccountDetails) GetBatchBookingPreferredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BatchBookingPreferred.Get(), o.BatchBookingPreferred.IsSet()
}

// HasBatchBookingPreferred returns a boolean if a field has been set.
func (o *DirectDebitWithAccountDetails) HasBatchBookingPreferred() bool {
	if o != nil && o.BatchBookingPreferred.IsSet() {
		return true
	}

	return false
}

// SetBatchBookingPreferred gets a reference to the given NullableBool and assigns it to the BatchBookingPreferred field.
func (o *DirectDebitWithAccountDetails) SetBatchBookingPreferred(v bool) {
	o.BatchBookingPreferred.Set(&v)
}
// SetBatchBookingPreferredNil sets the value for BatchBookingPreferred to be an explicit nil
func (o *DirectDebitWithAccountDetails) SetBatchBookingPreferredNil() {
	o.BatchBookingPreferred.Set(nil)
}

// UnsetBatchBookingPreferred ensures that no value is present for BatchBookingPreferred, not even an explicit nil
func (o *DirectDebitWithAccountDetails) UnsetBatchBookingPreferred() {
	o.BatchBookingPreferred.Unset()
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DirectDebitWithAccountDetails) GetProfileId() string {
	if o == nil || o.ProfileId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProfileId.Get()
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DirectDebitWithAccountDetails) GetProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProfileId.Get(), o.ProfileId.IsSet()
}

// HasProfileId returns a boolean if a field has been set.
func (o *DirectDebitWithAccountDetails) HasProfileId() bool {
	if o != nil && o.ProfileId.IsSet() {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given NullableString and assigns it to the ProfileId field.
func (o *DirectDebitWithAccountDetails) SetProfileId(v string) {
	o.ProfileId.Set(&v)
}
// SetProfileIdNil sets the value for ProfileId to be an explicit nil
func (o *DirectDebitWithAccountDetails) SetProfileIdNil() {
	o.ProfileId.Set(nil)
}

// UnsetProfileId ensures that no value is present for ProfileId, not even an explicit nil
func (o *DirectDebitWithAccountDetails) UnsetProfileId() {
	o.ProfileId.Unset()
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DirectDebitWithAccountDetails) GetRedirectUrl() string {
	if o == nil || o.RedirectUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.RedirectUrl.Get()
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DirectDebitWithAccountDetails) GetRedirectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RedirectUrl.Get(), o.RedirectUrl.IsSet()
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *DirectDebitWithAccountDetails) HasRedirectUrl() bool {
	if o != nil && o.RedirectUrl.IsSet() {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given NullableString and assigns it to the RedirectUrl field.
func (o *DirectDebitWithAccountDetails) SetRedirectUrl(v string) {
	o.RedirectUrl.Set(&v)
}
// SetRedirectUrlNil sets the value for RedirectUrl to be an explicit nil
func (o *DirectDebitWithAccountDetails) SetRedirectUrlNil() {
	o.RedirectUrl.Set(nil)
}

// UnsetRedirectUrl ensures that no value is present for RedirectUrl, not even an explicit nil
func (o *DirectDebitWithAccountDetails) UnsetRedirectUrl() {
	o.RedirectUrl.Unset()
}

// GetCallbacks returns the Callbacks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DirectDebitWithAccountDetails) GetCallbacks() Callbacks {
	if o == nil || o.Callbacks.Get() == nil {
		var ret Callbacks
		return ret
	}
	return *o.Callbacks.Get()
}

// GetCallbacksOk returns a tuple with the Callbacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DirectDebitWithAccountDetails) GetCallbacksOk() (*Callbacks, bool) {
	if o == nil {
		return nil, false
	}
	return o.Callbacks.Get(), o.Callbacks.IsSet()
}

// HasCallbacks returns a boolean if a field has been set.
func (o *DirectDebitWithAccountDetails) HasCallbacks() bool {
	if o != nil && o.Callbacks.IsSet() {
		return true
	}

	return false
}

// SetCallbacks gets a reference to the given NullableCallbacks and assigns it to the Callbacks field.
func (o *DirectDebitWithAccountDetails) SetCallbacks(v Callbacks) {
	o.Callbacks.Set(&v)
}
// SetCallbacksNil sets the value for Callbacks to be an explicit nil
func (o *DirectDebitWithAccountDetails) SetCallbacksNil() {
	o.Callbacks.Set(nil)
}

// UnsetCallbacks ensures that no value is present for Callbacks, not even an explicit nil
func (o *DirectDebitWithAccountDetails) UnsetCallbacks() {
	o.Callbacks.Unset()
}

// GetOrders returns the Orders field value
func (o *DirectDebitWithAccountDetails) GetOrders() []DirectDebitOrder {
	if o == nil {
		var ret []DirectDebitOrder
		return ret
	}

	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value
// and a boolean to check if the value has been set.
func (o *DirectDebitWithAccountDetails) GetOrdersOk() ([]DirectDebitOrder, bool) {
	if o == nil {
		return nil, false
	}
	return o.Orders, true
}

// SetOrders sets field value
func (o *DirectDebitWithAccountDetails) SetOrders(v []DirectDebitOrder) {
	o.Orders = v
}

// GetReceiver returns the Receiver field value
func (o *DirectDebitWithAccountDetails) GetReceiver() DirectDebitWithAccountReceiver {
	if o == nil {
		var ret DirectDebitWithAccountReceiver
		return ret
	}

	return o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value
// and a boolean to check if the value has been set.
func (o *DirectDebitWithAccountDetails) GetReceiverOk() (*DirectDebitWithAccountReceiver, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Receiver, true
}

// SetReceiver sets field value
func (o *DirectDebitWithAccountDetails) SetReceiver(v DirectDebitWithAccountReceiver) {
	o.Receiver = v
}

// GetDirectDebitType returns the DirectDebitType field value
func (o *DirectDebitWithAccountDetails) GetDirectDebitType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DirectDebitType
}

// GetDirectDebitTypeOk returns a tuple with the DirectDebitType field value
// and a boolean to check if the value has been set.
func (o *DirectDebitWithAccountDetails) GetDirectDebitTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DirectDebitType, true
}

// SetDirectDebitType sets field value
func (o *DirectDebitWithAccountDetails) SetDirectDebitType(v string) {
	o.DirectDebitType = v
}

// GetSequenceType returns the SequenceType field value
func (o *DirectDebitWithAccountDetails) GetSequenceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SequenceType
}

// GetSequenceTypeOk returns a tuple with the SequenceType field value
// and a boolean to check if the value has been set.
func (o *DirectDebitWithAccountDetails) GetSequenceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SequenceType, true
}

// SetSequenceType sets field value
func (o *DirectDebitWithAccountDetails) SetSequenceType(v string) {
	o.SequenceType = v
}

func (o DirectDebitWithAccountDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["executionDate"] = o.ExecutionDate
	}
	if o.BatchBookingPreferred.IsSet() {
		toSerialize["batchBookingPreferred"] = o.BatchBookingPreferred.Get()
	}
	if o.ProfileId.IsSet() {
		toSerialize["profileId"] = o.ProfileId.Get()
	}
	if o.RedirectUrl.IsSet() {
		toSerialize["redirectUrl"] = o.RedirectUrl.Get()
	}
	if o.Callbacks.IsSet() {
		toSerialize["callbacks"] = o.Callbacks.Get()
	}
	if true {
		toSerialize["orders"] = o.Orders
	}
	if true {
		toSerialize["receiver"] = o.Receiver
	}
	if true {
		toSerialize["directDebitType"] = o.DirectDebitType
	}
	if true {
		toSerialize["sequenceType"] = o.SequenceType
	}
	return json.Marshal(toSerialize)
}

type NullableDirectDebitWithAccountDetails struct {
	value *DirectDebitWithAccountDetails
	isSet bool
}

func (v NullableDirectDebitWithAccountDetails) Get() *DirectDebitWithAccountDetails {
	return v.value
}

func (v *NullableDirectDebitWithAccountDetails) Set(val *DirectDebitWithAccountDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectDebitWithAccountDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectDebitWithAccountDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectDebitWithAccountDetails(val *DirectDebitWithAccountDetails) *NullableDirectDebitWithAccountDetails {
	return &NullableDirectDebitWithAccountDetails{value: val, isSet: true}
}

func (v NullableDirectDebitWithAccountDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectDebitWithAccountDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


