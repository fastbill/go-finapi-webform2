/*
finAPI Web Form 2.0

The following pages give you some general information on how to use our APIs.<br/>The actual API services documentation then follows further below. You can use the menu to jump between API sections.<br/><br/>This page has a built-in HTTP(S) client, so you can test the services directly from within this page, by filling in the request parameters and/or body in the respective services, and then hitting the TRY button. Note that you need to be authorized to make a successful API call. To authorize, refer to the '<a target='_blank' href='https://docs.finapi.io/?product=access#tag--Authorization'>Authorization</a>' section of Access, or in case you already have a valid user token, just use the QUICK AUTH on the left.<br/>Please also remember that all user management functions should be looked up in <a target='_blank' href='https://docs.finapi.io/?product=access'>Access</a>.<br/><br/>You should also check out the <a target='_blank' href='https://documentation.finapi.io/webform/'>Web Form 2.0 Public Documentation</a> as well as <a target='_blank' href='https://documentation.finapi.io/access/'>Access Public Documentation</a> for more information. If you need any help with the API, contact <a href='mailto:support@finapi.io'>support@finapi.io</a>.<br/><h2 id=\"general-information\">General information</h2><h3 id=\"general-request-ids\"><strong>Request IDs</strong></h3>With any API call, you can pass a request ID via a header with name \"X-Request-Id\". The request ID can be an arbitrary string with up to 255 characters. Passing a longer string will result in an error.<br/><br/>If you don't pass a request ID for a call, finAPI will generate a random ID internally.<br/><br/>The request ID is always returned back in the response of a service, as a header with name \"X-Request-Id\".<br/><br/>We highly recommend to always pass a (preferably unique) request ID, and include it into your client application logs whenever you make a request or receive a response(especially in the case of an error response). finAPI is also logging request IDs on its end. Having a request ID can help the finAPI support team to work more efficiently and solve tickets faster.<h3 id=\"type-coercion\"><strong>Type Coercion</strong></h3>In order to ease the integration for some languages, which do not natively support high precision number representations, Web Form 2.0 API supports relax type binding for the openAPI type <code>number</code>, which is used for money amount fields. If you use one of those languages, to avoid precision errors that can appear from <code>float</code> values, you can pass the amount as a <code>string</code>.<h3 id=\"general-faq\"><strong>FAQ</strong></h3><strong>Is there a finAPI SDK?</strong><br/>Currently we do not offer a native SDK, but there is the option to generate an SDKfor almost any target language via OpenAPI. Use the 'Download SDK' button on this page for SDK generation.<br/><br/><strong>Why do I need to keep authorizing when calling services on this page?</strong><br/>This page is a \"one-page-app\". Reloading the page resets the OAuth authorization context. There is generally no need to reload the page, so just don't do it and your authorization will persist.

API version: 2.430.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package webform2

import (
	"encoding/json"
)

// BankConnectionUpdateDetails struct for BankConnectionUpdateDetails
type BankConnectionUpdateDetails struct {
	Bank UpdateBankDetails `json:"bank"`
	// Whether new accounts that have not yet been imported will be imported or not.<br/><br/>By setting this parameter to true, we will try to get new accounts the user might have at the bank. The user will have a possibility to stop the process once he finds the accounts he is interested in have been imported. The set of newly imported accounts can be limited by using \"accountTypes\" parameter.
	ImportNewAccounts NullableBool `json:"importNewAccounts,omitempty"`
	// A set of account types that are considered for the adding. If no values is given, then all accounts will be imported. Only applied if \"importNewAccounts\" is set to \"true\" and ignored otherwise. <br/>This parameter refers to the same parameters of \"<a target='_blank' href='https://docs.finapi.io/?product=access#post-/api/v1/bankConnections/update'>Update a bank connection</a>\" and \"<a target='_blank' href='https://docs.finapi.io/?product=access#post-/api/v1/bankConnections/connectInterface'>Connect a new interface</a>\" services in the finAPI Access API.
	AccountTypes []AccountType `json:"accountTypes,omitempty"`
	// Whether to skip the download of transactions and securities or not.<br/>This parameter refers to the same parameters of \"<a target='_blank' href='https://docs.finapi.io/?product=access#post-/api/v1/bankConnections/update'>Update a bank connection</a>\" and \"<a target='_blank' href='https://docs.finapi.io/?product=access#post-/api/v1/bankConnections/connectInterface'>Connect a new interface</a>\" services in the finAPI Access API.
	SkipPositionsDownload NullableBool `json:"skipPositionsDownload,omitempty"`
	// Whether to load information about the bank connection owner(s).<br/>This parameter refers to the same parameters of \"<a target='_blank' href='https://docs.finapi.io/?product=access#post-/api/v1/bankConnections/update'>Update a bank connection</a>\" and \"<a target='_blank' href='https://docs.finapi.io/?product=access#post-/api/v1/bankConnections/connectInterface'>Connect a new interface</a>\" services in the finAPI Access API.
	LoadOwnerData NullableBool `json:"loadOwnerData,omitempty"`
	// If the user has stored credentials in finAPI for the selected bank connection, then the finAPI web form will automatically use those to login to the bank. If a previous update failed because of invalid credentials or you want to allow the user to change his stored data, you can set this field. It will force the web form flow for the user and allow him to make changes to the data that he has stored in finAPI.<br/>&bull; <code>CREDENTIALS</code> - the end user can edit his stored credentials.
	EditSavedSettings []string `json:"editSavedSettings,omitempty"`
	Callbacks NullableCallbacks `json:"callbacks,omitempty"`
	// The profile to be applied to the web form.<br/>This will overwrite the default profile, if such a profile exists.
	ProfileId NullableString `json:"profileId,omitempty"`
}

// NewBankConnectionUpdateDetails instantiates a new BankConnectionUpdateDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankConnectionUpdateDetails(bank UpdateBankDetails) *BankConnectionUpdateDetails {
	this := BankConnectionUpdateDetails{}
	this.Bank = bank
	var importNewAccounts bool = false
	this.ImportNewAccounts = *NewNullableBool(&importNewAccounts)
	var skipPositionsDownload bool = false
	this.SkipPositionsDownload = *NewNullableBool(&skipPositionsDownload)
	var loadOwnerData bool = false
	this.LoadOwnerData = *NewNullableBool(&loadOwnerData)
	return &this
}

// NewBankConnectionUpdateDetailsWithDefaults instantiates a new BankConnectionUpdateDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankConnectionUpdateDetailsWithDefaults() *BankConnectionUpdateDetails {
	this := BankConnectionUpdateDetails{}
	var importNewAccounts bool = false
	this.ImportNewAccounts = *NewNullableBool(&importNewAccounts)
	var skipPositionsDownload bool = false
	this.SkipPositionsDownload = *NewNullableBool(&skipPositionsDownload)
	var loadOwnerData bool = false
	this.LoadOwnerData = *NewNullableBool(&loadOwnerData)
	return &this
}

// GetBank returns the Bank field value
func (o *BankConnectionUpdateDetails) GetBank() UpdateBankDetails {
	if o == nil {
		var ret UpdateBankDetails
		return ret
	}

	return o.Bank
}

// GetBankOk returns a tuple with the Bank field value
// and a boolean to check if the value has been set.
func (o *BankConnectionUpdateDetails) GetBankOk() (*UpdateBankDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bank, true
}

// SetBank sets field value
func (o *BankConnectionUpdateDetails) SetBank(v UpdateBankDetails) {
	o.Bank = v
}

// GetImportNewAccounts returns the ImportNewAccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BankConnectionUpdateDetails) GetImportNewAccounts() bool {
	if o == nil || o.ImportNewAccounts.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ImportNewAccounts.Get()
}

// GetImportNewAccountsOk returns a tuple with the ImportNewAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BankConnectionUpdateDetails) GetImportNewAccountsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImportNewAccounts.Get(), o.ImportNewAccounts.IsSet()
}

// HasImportNewAccounts returns a boolean if a field has been set.
func (o *BankConnectionUpdateDetails) HasImportNewAccounts() bool {
	if o != nil && o.ImportNewAccounts.IsSet() {
		return true
	}

	return false
}

// SetImportNewAccounts gets a reference to the given NullableBool and assigns it to the ImportNewAccounts field.
func (o *BankConnectionUpdateDetails) SetImportNewAccounts(v bool) {
	o.ImportNewAccounts.Set(&v)
}
// SetImportNewAccountsNil sets the value for ImportNewAccounts to be an explicit nil
func (o *BankConnectionUpdateDetails) SetImportNewAccountsNil() {
	o.ImportNewAccounts.Set(nil)
}

// UnsetImportNewAccounts ensures that no value is present for ImportNewAccounts, not even an explicit nil
func (o *BankConnectionUpdateDetails) UnsetImportNewAccounts() {
	o.ImportNewAccounts.Unset()
}

// GetAccountTypes returns the AccountTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BankConnectionUpdateDetails) GetAccountTypes() []AccountType {
	if o == nil {
		var ret []AccountType
		return ret
	}
	return o.AccountTypes
}

// GetAccountTypesOk returns a tuple with the AccountTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BankConnectionUpdateDetails) GetAccountTypesOk() ([]AccountType, bool) {
	if o == nil || o.AccountTypes == nil {
		return nil, false
	}
	return o.AccountTypes, true
}

// HasAccountTypes returns a boolean if a field has been set.
func (o *BankConnectionUpdateDetails) HasAccountTypes() bool {
	if o != nil && o.AccountTypes != nil {
		return true
	}

	return false
}

// SetAccountTypes gets a reference to the given []AccountType and assigns it to the AccountTypes field.
func (o *BankConnectionUpdateDetails) SetAccountTypes(v []AccountType) {
	o.AccountTypes = v
}

// GetSkipPositionsDownload returns the SkipPositionsDownload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BankConnectionUpdateDetails) GetSkipPositionsDownload() bool {
	if o == nil || o.SkipPositionsDownload.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SkipPositionsDownload.Get()
}

// GetSkipPositionsDownloadOk returns a tuple with the SkipPositionsDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BankConnectionUpdateDetails) GetSkipPositionsDownloadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkipPositionsDownload.Get(), o.SkipPositionsDownload.IsSet()
}

// HasSkipPositionsDownload returns a boolean if a field has been set.
func (o *BankConnectionUpdateDetails) HasSkipPositionsDownload() bool {
	if o != nil && o.SkipPositionsDownload.IsSet() {
		return true
	}

	return false
}

// SetSkipPositionsDownload gets a reference to the given NullableBool and assigns it to the SkipPositionsDownload field.
func (o *BankConnectionUpdateDetails) SetSkipPositionsDownload(v bool) {
	o.SkipPositionsDownload.Set(&v)
}
// SetSkipPositionsDownloadNil sets the value for SkipPositionsDownload to be an explicit nil
func (o *BankConnectionUpdateDetails) SetSkipPositionsDownloadNil() {
	o.SkipPositionsDownload.Set(nil)
}

// UnsetSkipPositionsDownload ensures that no value is present for SkipPositionsDownload, not even an explicit nil
func (o *BankConnectionUpdateDetails) UnsetSkipPositionsDownload() {
	o.SkipPositionsDownload.Unset()
}

// GetLoadOwnerData returns the LoadOwnerData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BankConnectionUpdateDetails) GetLoadOwnerData() bool {
	if o == nil || o.LoadOwnerData.Get() == nil {
		var ret bool
		return ret
	}
	return *o.LoadOwnerData.Get()
}

// GetLoadOwnerDataOk returns a tuple with the LoadOwnerData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BankConnectionUpdateDetails) GetLoadOwnerDataOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.LoadOwnerData.Get(), o.LoadOwnerData.IsSet()
}

// HasLoadOwnerData returns a boolean if a field has been set.
func (o *BankConnectionUpdateDetails) HasLoadOwnerData() bool {
	if o != nil && o.LoadOwnerData.IsSet() {
		return true
	}

	return false
}

// SetLoadOwnerData gets a reference to the given NullableBool and assigns it to the LoadOwnerData field.
func (o *BankConnectionUpdateDetails) SetLoadOwnerData(v bool) {
	o.LoadOwnerData.Set(&v)
}
// SetLoadOwnerDataNil sets the value for LoadOwnerData to be an explicit nil
func (o *BankConnectionUpdateDetails) SetLoadOwnerDataNil() {
	o.LoadOwnerData.Set(nil)
}

// UnsetLoadOwnerData ensures that no value is present for LoadOwnerData, not even an explicit nil
func (o *BankConnectionUpdateDetails) UnsetLoadOwnerData() {
	o.LoadOwnerData.Unset()
}

// GetEditSavedSettings returns the EditSavedSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BankConnectionUpdateDetails) GetEditSavedSettings() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.EditSavedSettings
}

// GetEditSavedSettingsOk returns a tuple with the EditSavedSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BankConnectionUpdateDetails) GetEditSavedSettingsOk() ([]string, bool) {
	if o == nil || o.EditSavedSettings == nil {
		return nil, false
	}
	return o.EditSavedSettings, true
}

// HasEditSavedSettings returns a boolean if a field has been set.
func (o *BankConnectionUpdateDetails) HasEditSavedSettings() bool {
	if o != nil && o.EditSavedSettings != nil {
		return true
	}

	return false
}

// SetEditSavedSettings gets a reference to the given []string and assigns it to the EditSavedSettings field.
func (o *BankConnectionUpdateDetails) SetEditSavedSettings(v []string) {
	o.EditSavedSettings = v
}

// GetCallbacks returns the Callbacks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BankConnectionUpdateDetails) GetCallbacks() Callbacks {
	if o == nil || o.Callbacks.Get() == nil {
		var ret Callbacks
		return ret
	}
	return *o.Callbacks.Get()
}

// GetCallbacksOk returns a tuple with the Callbacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BankConnectionUpdateDetails) GetCallbacksOk() (*Callbacks, bool) {
	if o == nil {
		return nil, false
	}
	return o.Callbacks.Get(), o.Callbacks.IsSet()
}

// HasCallbacks returns a boolean if a field has been set.
func (o *BankConnectionUpdateDetails) HasCallbacks() bool {
	if o != nil && o.Callbacks.IsSet() {
		return true
	}

	return false
}

// SetCallbacks gets a reference to the given NullableCallbacks and assigns it to the Callbacks field.
func (o *BankConnectionUpdateDetails) SetCallbacks(v Callbacks) {
	o.Callbacks.Set(&v)
}
// SetCallbacksNil sets the value for Callbacks to be an explicit nil
func (o *BankConnectionUpdateDetails) SetCallbacksNil() {
	o.Callbacks.Set(nil)
}

// UnsetCallbacks ensures that no value is present for Callbacks, not even an explicit nil
func (o *BankConnectionUpdateDetails) UnsetCallbacks() {
	o.Callbacks.Unset()
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BankConnectionUpdateDetails) GetProfileId() string {
	if o == nil || o.ProfileId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProfileId.Get()
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BankConnectionUpdateDetails) GetProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProfileId.Get(), o.ProfileId.IsSet()
}

// HasProfileId returns a boolean if a field has been set.
func (o *BankConnectionUpdateDetails) HasProfileId() bool {
	if o != nil && o.ProfileId.IsSet() {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given NullableString and assigns it to the ProfileId field.
func (o *BankConnectionUpdateDetails) SetProfileId(v string) {
	o.ProfileId.Set(&v)
}
// SetProfileIdNil sets the value for ProfileId to be an explicit nil
func (o *BankConnectionUpdateDetails) SetProfileIdNil() {
	o.ProfileId.Set(nil)
}

// UnsetProfileId ensures that no value is present for ProfileId, not even an explicit nil
func (o *BankConnectionUpdateDetails) UnsetProfileId() {
	o.ProfileId.Unset()
}

func (o BankConnectionUpdateDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bank"] = o.Bank
	}
	if o.ImportNewAccounts.IsSet() {
		toSerialize["importNewAccounts"] = o.ImportNewAccounts.Get()
	}
	if o.AccountTypes != nil {
		toSerialize["accountTypes"] = o.AccountTypes
	}
	if o.SkipPositionsDownload.IsSet() {
		toSerialize["skipPositionsDownload"] = o.SkipPositionsDownload.Get()
	}
	if o.LoadOwnerData.IsSet() {
		toSerialize["loadOwnerData"] = o.LoadOwnerData.Get()
	}
	if o.EditSavedSettings != nil {
		toSerialize["editSavedSettings"] = o.EditSavedSettings
	}
	if o.Callbacks.IsSet() {
		toSerialize["callbacks"] = o.Callbacks.Get()
	}
	if o.ProfileId.IsSet() {
		toSerialize["profileId"] = o.ProfileId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableBankConnectionUpdateDetails struct {
	value *BankConnectionUpdateDetails
	isSet bool
}

func (v NullableBankConnectionUpdateDetails) Get() *BankConnectionUpdateDetails {
	return v.value
}

func (v *NullableBankConnectionUpdateDetails) Set(val *BankConnectionUpdateDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableBankConnectionUpdateDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableBankConnectionUpdateDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankConnectionUpdateDetails(val *BankConnectionUpdateDetails) *NullableBankConnectionUpdateDetails {
	return &NullableBankConnectionUpdateDetails{value: val, isSet: true}
}

func (v NullableBankConnectionUpdateDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankConnectionUpdateDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


